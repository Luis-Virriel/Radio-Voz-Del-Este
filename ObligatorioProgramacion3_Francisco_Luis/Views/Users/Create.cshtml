@model ObligatorioProgramacion3_Francisco_Luis.Models.User

@{
    ViewBag.Title = "Create";
}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bona+Nova+SC:ital,wght@0,400;0,700;1,400&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
<link href="~/Content/Styles/StylesUsers/StyleCreateUser.css" rel="stylesheet" />

<div class="create-container">
    <h1 class="create-title">Crear Usuario</h1>
    <p class="create-subtitle">Complete los campos para registrar un nuevo usuario</p>
    <hr class="create-divider" />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        

        <div class="form-container">
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, "Nombre de Usuario", new { @class = "form-label" })
                <div class="input-container">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-input", @placeholder = "Ingrese el nombre de usuario" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, "Correo Electrónico", new { @class = "form-label" })
                <div class="input-container">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-input", @placeholder = "usuario@ejemplo.com", @type = "email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserPassword, "Contraseña", new { @class = "form-label" })
                <div class="input-container">
                    @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-input password-input", @placeholder = "Ingrese una contraseña segura", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RoleID, "Rol de Usuario", new { @class = "form-label" })
                <div class="input-container">
                    @Html.DropDownList("RoleID", null, "-- Seleccione un rol --", new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "validation-error" })
                </div>
            </div>

            <div class="button-container">
                <input type="submit" value="Crear Usuario" class="submit-button" />
                @Html.ActionLink("Volver a la Lista", "Index", null, new { @class = "back-button" })
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
