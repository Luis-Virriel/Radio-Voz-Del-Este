@model ObligatorioProgramacion3_Francisco_Luis.Models.Client

@{
    ViewBag.Title = "Crear Cliente";
}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bona+Nova+SC:ital,wght@0,400;0,700;1,400&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
<link href="@Url.Content("~/Content/Styles/StylesClients/StyleCrearClient.css")" rel="stylesheet" type="text/css" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-containerClient">
        <h4 class="form-titleClient">Creación de Cliente</h4>
        <p class="create-subtitle">Complete los campos para registrar un nuevo cliente</p>
        <hr class="create-divider" />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.IDNumber, "Cédula de Identidad")
            @Html.EditorFor(model => model.IDNumber, new
            {
                htmlAttributes = new
                {
                    @class = "input-field",
                    placeholder = "Ej: 12345678 o 1.234.567-8"
                }
            })
            @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, "Nombre")
            @Html.EditorFor(model => model.FirstName, new
            {
                htmlAttributes = new
                {
                    @class = "input-field",
                    placeholder = "Nombre"
                }
            })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, "Apellido")
            @Html.EditorFor(model => model.LastName, new
            {
                htmlAttributes = new
                {
                    @class = "input-field",
                    placeholder = "Apellido"
                }
            })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Correo Electrónico")
            @Html.EditorFor(model => model.Email, new
            {
                htmlAttributes = new
                {
                    @class = "input-field",
                    placeholder = "ejemplo@correo.com"
                }
            })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, "Fecha de Nacimiento")
            @Html.EditorFor(model => model.BirthDate, new
            {
                htmlAttributes = new
                {
                    @class = "input-field",
                    type = "date"
                }
            })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Usuario Asociado")

            @if (ViewBag.UserID != null)
            {
                <p class="form-control-static"><strong>@ViewBag.UserName</strong></p>
                @Html.HiddenFor(model => model.UserID, new { Value = ViewBag.UserID })
            }
            else
            {
                @Html.DropDownListFor(model => model.UserID, (SelectList)ViewBag.Users, "Seleccione un usuario", new { @class = "input-field" })
            }

            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
        </div>

        <div class="buttons-container">
            <div class="form-group">
                <input type="submit" value="CREAR CLIENTE" class="submit-button" />
            </div>
            <div class="back-link">
                @Html.ActionLink("← Volver a la Lista", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
