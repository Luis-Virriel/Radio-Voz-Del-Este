@model ObligatorioProgramacion3_Francisco_Luis.Models.Client

@{
    ViewBag.Title = "Editar Cliente";
}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bona+Nova+SC:ital,wght@0,400;0,700;1,400&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
<link href="~/Content/Styles/StylesClients/StyleEditClient.css" rel="stylesheet" />

<div class="edit-container">
    <h2 class="edit-title">Editar Cliente</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Información del Cliente</h4>
            <hr />

            <!-- Campo oculto para mantener la CI como clave primaria -->
            @Html.HiddenFor(model => model.IDNumber)

            <!-- Nombre -->
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, "Nombre", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            placeholder = "Nombre del cliente"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Apellido -->
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, "Apellido", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            placeholder = "Apellido del cliente"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Correo Electrónico -->
            <div class="form-group">
                @Html.LabelFor(model => model.Email, "Correo Electrónico", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            placeholder = "ejemplo@correo.com",
                            type = "email"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Fecha de Nacimiento -->
            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, "Fecha de Nacimiento", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            type = "date",
                            value = Model.BirthDate.HasValue ? Model.BirthDate.Value.ToString("yyyy-MM-dd") : ""
                        }
                    })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Usuario Asociado -->
            <div class="form-group">
                @Html.LabelFor(model => model.UserID, "Usuario Asociado", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("UserID", (SelectList)ViewBag.UserID, "-- Seleccione un usuario --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />

            <!-- Botones -->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar Cambios" class="btn btn-primary" />
                    @Html.ActionLink("← Volver a la Lista", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}